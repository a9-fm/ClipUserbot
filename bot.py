#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
import sys

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
try:
    os.system("termux-wake-lock")
    import alive_progress
    import wget
except ModuleNotFoundError:
    os.system("pip3 install alive_progress")
    os.system("pip3 install wget")

os.system("cls" if os.name == "nt" else "clear")
import wget
from alive_progress import alive_bar

with alive_bar(20, bar='classic', title='–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞', length=20) as bar:
    bar()
    try:
        import datetime
    except ModuleNotFoundError:
        os.system("pip3 install datetime")

    bar()
    try:
        import wikipedia
    except ModuleNotFoundError:
        os.system("pip3 install wikipedia")

    bar()
    try:
        import logging
    except ModuleNotFoundError:
        os.system("pip3 install logging")

    bar()
    try:
        import aiohttp
    except ModuleNotFoundError:
        os.system("pip3 install aiohttp")

    bar()
    try:
        import pyrogram
    except ModuleNotFoundError:
        os.system("pip3 install pyrogram")

    bar()
    try:
        import requests
    except ModuleNotFoundError:
        os.system("pip3 install requests")

    bar()
    try:
        import gtts
    except ModuleNotFoundError:
        os.system("pip3 install gtts")

    bar()
    try:
        import colorama
    except ModuleNotFoundError:
        os.system("pip3 install colorama")

    bar()
    try:
        import youtube_dl
    except ModuleNotFoundError:
        os.system("pip3 install youtube_dl")

    bar()
    try:
        import db0mb3r
    except ModuleNotFoundError:
        os.system("pip3 install db0mb3r")

    bar()
    try:
        import configparser
    except ModuleNotFoundError:
        os.system("pip3 install configparser")

    bar()
    try:
        import telegraph
    except ModuleNotFoundError:
        os.system("pip3 install telegraph")

    bar()
    configuration = os.path.exists("config.ini")
    if not configuration:
        wget.download("https://raw.githubusercontent.com/A9FM/filesUB/main/config.ini", "config.ini", bar=False)

    bar()
    news = os.path.exists("news.txt")
    if news:
        os.remove("news.txt")
        wget.download("https://raw.githubusercontent.com/A9FM/filesUB/main/news.txt", "news.txt", bar=False)
    else:
        wget.download("https://raw.githubusercontent.com/A9FM/filesUB/main/news.txt", "news.txt", bar=False)

    bar()
    stop = os.path.exists('stop.ogg')
    if not stop:
        wget.download('https://github.com/A9FM/filesUB/blob/main/stop.ogg?raw=true', "stop.ogg", bar=False)

    bar()
    update = os.path.exists("update.ogg")
    if not update:
        wget.download("https://github.com/A9FM/filesUB/blob/main/update.ogg?raw=true", "update.ogg", bar=False)

    bar()
    start = os.path.exists('start.ogg')
    if not start:
        wget.download('https://github.com/A9FM/filesUB/blob/main/start.ogg?raw=true', "start.ogg", bar=False)

    bar()
    reput = os.path.exists('rep.txt')
    if not reput:
        wget.download('https://raw.githubusercontent.com/A9FM/filesUB/main/rep.txt', "rep.txt", bar=False)

    bar()
    reput = os.path.exists('notes.txt')
    if not reput:
        wget.download('https://raw.githubusercontent.com/A9FM/filesUB/main/notes.txt', "notes.txt", bar=False)

    bar()
    floodw = os.path.exists('floodwait.txt')
    if not floodw:
        wget.download('https://raw.githubusercontent.com/A9FM/filesUB/main/floodwait.txt', "floodwait.txt", bar=False)

from pyrogram import Client, filters
from pyrogram.types import Message, ChatPermissions
from pyrogram.handlers import MessageHandler
from pyrogram.methods.chats.get_chat_members import Filters as ChatMemberFilters
from pyrogram.errors import FloodWait
from time import perf_counter, sleep, time
from aiohttp import ClientSession
import random
import datetime
import asyncio
import sys
import wikipedia
import requests
import youtube_dl
import subprocess
import configparser
import shlex
from gtts import gTTS
import colorama
from telegraph import Telegraph

version = "1.9.5 (–ë–µ—Ç–∞)"  # –í–µ—Ä—Å–∏—è —é–∑–µ—Ä–±–æ—Ç–∞

# –ü—Ä–µ—Ñ–∏–∫—Å—ã –¥–æ–ø
config_path = os.path.join(sys.path[0], "config.ini")
config = configparser.ConfigParser()
config.read(config_path)


def get_prefix():
    prefix = config.get("prefix", "prefix")
    return prefix

try:
    prefix = get_prefix()
except:
    config.add_section("prefix")
    config.set("prefix", "prefix", ".")
    with open(config_path, "w") as config_file:
        config.write(config_file)
    prefix = "."

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
os.system("cls" if os.name == "nt" else "clear")

# –õ–æ–≥–∏ + –í—Ö–æ–¥
logi = "‚ï≠ –õ–æ–≥–∏\n‚îÉ "

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞, –æ–±–Ω–æ–≤—ã
app = Client("my_account")

with app:
    app.join_chat("ArturDestroyerBot")  # –ü—Ä–æ—à—É, –Ω–µ —É–±–∏—Ä–∞–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É
    app.unblock_user("ClipUSERBOT_LOGGERbot")
    app.unblock_user("ClipUSERBOT_NOTESbot")
    nowe = datetime.datetime.now()
    timnowe = nowe.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    startlog = logi + timnowe + "\n‚ï∞ –Æ–∑–µ—Ä–±–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
    app.send_message("ClipUSERBOT_LOGGERbot", startlog)
    me = app.get_me()
    if len(sys.argv) == 4:
        try:
            restart_type = sys.argv[3]
            if restart_type == "1":
                app.send_audio(
                    sys.argv[1], "update.ogg", "‚úÖ | –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ <b>–∑–∞–≤–µ—Ä—à–µ–Ω–æ!</b>"
                )
            else:
                app.send_audio(
                    sys.argv[1], "start.ogg", "‚úÖ | –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ <b>–∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>"
                )
        except:
            pass

os.system("cls" if os.name == "nt" else "clear")

with open("news.txt", "r+", encoding="utf-8") as f:
    data = f.read()
    news = str(data)
    print(f"""\033[32m‚ïî‚ïê‚ïó‚ï¶  ‚ï¶‚ïî‚ïê‚ïó
‚ïë  ‚ïë  ‚ïë‚ï†‚ïê‚ïù
‚ïö‚ïê‚ïù‚ï©‚ïê‚ïù‚ï©‚ï©
\033[91m‚ï¶ ‚ï¶‚ïî‚ïê‚ïó‚ïî‚ïê‚ïó‚ï¶‚ïê‚ïó‚ïî‚ïó ‚ïî‚ïê‚ïó‚ïî‚ï¶‚ïó
\033[91m‚ïë ‚ïë‚ïö‚ïê‚ïó‚ïë‚ï£ ‚ï†‚ï¶‚ïù‚ï†‚ï©‚ïó‚ïë ‚ïë ‚ïë 
\033[91m‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ï©‚ïö‚ïê‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù ‚ï©
\033[91mTelegram –ö–∞–Ω–∞–ª - @ArturDestroyerBot
–ü–æ–º–æ—â—å - @Artur_destroyer
–í–µ—Ä—Å–∏—è {version}
\033[32m
[‚àö] {me.first_name} - ({me.id}) –ó–∞–ø—É—â–µ–Ω

\033[34m–°–æ–±—ã—Ç–∏—è:
{news}
""")
    f.close()


# –ü–æ–º–æ—â—å | –ò–Ω—Ñ–∞ –ø—Ä–æ –Æ–∑–µ—Ä–±–æ—Ç–∞
@app.on_message(filters.command("help", prefix) & filters.me)
async def helpp(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("üïê –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω—é –ø–æ–º–æ—â–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        telegraph = Telegraph()
        telegraph.create_account(short_name='ClipUserbot')
        helpp = f"""<p align="center"><a href="https://github.com/A9FM/ClipUserbot"><img src="https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https://github.com/A9FM/ClipUserbot&title=Profile%20Views"></a></p>
<b><a href="https://t.me/ArturDestroyerBot">ü§ñ UserBot CLIP {version} ü§ñ</a></b><br>
<b><a href="https://9fm.github.io">üë® –°–æ–∑–¥–∞—Ç–µ–ª—å üíª</a></b><br>
<b><a href="https://www.donationalerts.com/r/a9fm">üí∞ –î–æ–Ω–∞—Ç –°–æ–∑–¥–∞—Ç–µ–ª—é üí∞</a></b><br>
<b><a href="https://github.com/A9FM/ClipUserbot#readme">ü§î –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? ü§î</a></b><br>
<a href="https://github.com/A9FM/filesUB/blob/main/README.md">¬© <b>Copyright ClipUSERBOT</b> ¬©</a><br>
<h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h3>
<a href="#–û—Å–Ω–æ–≤–Ω—ã–µ">1.1 –û—Å–Ω–æ–≤–Ω—ã–µ</a><br>
<a href="#–ú–∞–ª–æ-–≤—Ä–µ–º–µ–Ω–Ω–∏">1.2 –ú–∞–ª–æ –≤—Ä–µ–º–µ–Ω–Ω–∏</a><br>
<a href="#–¢—Ä–æ–ª–ª–∏–Ω–≥">1.3 –¢—Ä–æ–ª–ª–∏–Ω–≥</a><br>
<a href="#–ü–ª—é—à–∫–∏">1.4 –ü–ª—é—à–∫–∏</a><br>
<a href="#–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è">1.5 –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ</a><br>
<h3>–û—Å–Ω–æ–≤–Ω—ã–µ</h3>
‚áõ <code>help</code> - –ü–æ–º–æ—â—å | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è | –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏<br>
‚áõ <code>ping</code> - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ü–∏–Ω–≥–∞ –Æ–∑–µ—Ä–±–æ—Ç–∞ [–ö–∞—á–µ—Å—Ç–≤–æ –ø–æ–ª–∫–ª—é—á–µ–Ω–∏—è]<br>
‚áõ <code>restart</code> - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ [–û—à–∏–±–∫–∞, –ë–∞–≥ –≤ –Æ–∑–µ—Ä–±–æ—Ç–µ]<br>
‚áõ <code>update</code> - –û–±–Ω–æ–≤–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞<br>
‚áõ <code>beta</code> - –û–±–Ω–æ–≤–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞ –Ω–∞ –ë–µ—Ç–∞ –≤–µ—Ä—Å–∏—é<br>
‚áõ <code>online</code> - –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω (–í —Å–µ—Ç–∏/–°—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É)<br>
‚áõ <code>offline</code> - –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–µ—á–Ω–æ–≥–æ –æ–Ω–ª–∞–π–Ω–∞<br>
‚áõ <code>mnotes</code> [–û—Ç–≤–µ—Ç] [–ù–∞–∑–≤–∞–Ω–∏–µ] - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ <br>
‚áõ <code>notes</code> [–ß–∏—Å–ª–æ] - –í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ<br>
‚áõ <code>mynotes</code> - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö notes<br>
‚áõ <code>.sp</code> [–°–∏–º–≤–æ–ª] - –°–º–µ–Ω–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞ (–∑–Ω–∞–∫–∞ –≤ –Ω–∞—á–∞–ª–µ –¥–ª—è –∫–æ–º–º–∞–Ω–¥)<br>
<h3>–ú–∞–ª–æ –≤—Ä–µ–º–µ–Ω–Ω–∏</h3>
‚áõ <code>afk</code> [–ü—Ä–∏—á–∏–Ω–∞] - –í–≤–æ–π—Ç–∏ –≤ –ê–§–ö [–ù–µ –≤ —Å–µ—Ç–∏]<br>
‚áõ <code>unafk</code> - –í—ã–π—Ç–∏ –∏–∑ –ê–§–ö<br>
‚áõ <code>wiki</code> [–°–ª–æ–≤–æ] - –ü–æ–∏—Å–∫ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏<br>
‚áõ <code>weather</code> [–ì–æ—Ä–æ–¥] - –ü–æ–≥–æ–¥–∞<br>
<h3>–¢—Ä–æ–ª–ª–∏–Ω–≥</h3>
‚áõ <code>hack</code> - –í–∑–ª–æ–º –ü–µ–Ω—Ç–∞–≥–æ–Ω–Ω–∞<br>
‚áõ <code>jopa</code> - –í–∑–ª–æ–º –∂–æ–ø—ã<br>
‚áõ <code>mum</code> - –ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏<br>
‚áõ <code>drugs</code> - –ü—Ä–∏–Ω—è—Ç—å 3a–ü—ÄE—âEHHblE B–µ—âECTB–∞<br>
‚áõ <code>bomber</code> - –ó–∞–ø—É—Å–∫ –ë–æ–º–±–µ—Ä–∞ (–°–∞–π—Ç)<br>
‚áõ <code>bbomber</code> [–ù–æ–º–µ—Ä –±–µ–∑ –∑–Ω–∞–∫–∞ +] - –ó–∞–ø—É—Å–∫ –±–æ–º–±–µ—Ä–∞ (–±–æ—Ç—ã)<br>
‚áõ <code>sbomber</code> - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–æ–±–æ—Ç—ã –±–æ–º–±–µ—Ä–∞<br>
‚áõ <code>q</code> [–û—Ç–≤–µ—Ç] - –°–¥–µ–ª–∞—Ç—å —Ü–∏—Ç–∞—Ç—É (–°—Ç–∏–∫–µ—Ä —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)<br>
‚áõ <code>type</code> - –≠—Ñ—Ñ–µ–∫—Ç –ü–µ—á–∞—Ç–∏<br>
‚áõ <code>hide</code> - –°–æ–æ–±—â–µ–Ω–∏—è —Å –ê–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏–µ–º<br>
‚áõ <code>progressbar</code> [–ó–∞–≥–æ–ª–æ–≤–æ–∫] - –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä (–ó–∞–≥—Ä—É–∑–∫–∞)<br>
<h3>–ü–ª—é—à–∫–∏</h3>
‚áõ <code>sw</code> - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞—Å—Å–∫–ª–∞–¥–∫–∏ [–ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –ø–æ —Ç–∏–ø—É ghbdtn]<br>
‚áõ <code>short</code> [–°—Å—ã–ª–∫–∞] - —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫<br>
‚áõ <code>tagall</code> [–ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö] - –ü—Ä–∏–∑—ã–≤ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤<br>
‚áõ <code>id</code> - –ê–π–¥–∏<br>
‚áõ <code>info</code> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è<br>
‚áõ <code>infofull</code> - –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è<br>
‚áõ <code>qr</code> [–¢–µ–∫—Å—Ç] - –°–æ–∑–¥–∞–Ω–∏–µ QR-–ö–æ–¥–∞ —Å –≤–∞—à–∏–º —Ç–µ–∫—Å—Ç–æ–º<br>
‚áõ <code>time</code> - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è<br>
‚áõ <code>ladder</code> - —Ç–µ–∫—Å—Ç –ª–µ—Å–µ–Ω–∫–æ–π (–ø –ø—Ä –ø—Ä–∏ –ø—Ä–∏–≤ –ø—Ä–∏–≤–µ—Ç)<br>
‚áõ <code>webshot</code> [–°—Å—ã–ª–∫–∞] - –°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞<br>
‚áõ <code>autoread</code> - –ê–≤—Ç–æ-—á—Ç–µ–Ω–∏–µ (–ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —ç—Ç–æ–≥–æ —á–∞—Ç–∞)<br>
‚áõ <code>spam</code> [–ö–æ–ª-–≤–æ —Å–º—Å] [–í—Ä–µ–º—è –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö] [–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è] - –°–ø–∞–º<br>
‚áõ <code>stspam</code> [–ö–æ–ª-–≤–æ —Å–º—Å] [–í—Ä–µ–º—è –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö] [–ê–π–¥–∏ —Å—Ç–∏–∫–µ—Ä–∞] - –°–ø–∞–º —Å—Ç–∏–∫–µ—Ä–∞–º–∏<br>
‚áõ <code>yt</code> [—Å—Å—ã–ª–∫–∞] - –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ (—é—Ç—É–±, —Ç–∏–∫—Ç–æ–∫, –ª–∞–π–∫, –∏–Ω—Å—Ç–∞)<br>
‚áõ <code>myt</code> [—Å—Å—ã–ª–∫–∞] - –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∞ –∑–≤—É–∫–∞ —Å –≤–∏–¥–µ–æ (—é—Ç—É–±, —Ç–∏–∫—Ç–æ–∫, –ª–∞–π–∫, –∏–Ω—Å—Ç–∞)<br>
‚áõ <code>spamban</code> - –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π<br>
‚áõ <code>voice</code> [–¢–µ–∫—Å—Ç] - –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ<br>
‚áõ <code>text</code> [–û—Ç–≤–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ] - –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç<br>
‚áõ <code>cl</code> [–¢–µ–∫—Å—Ç] - –®–∏—Ñ—Ä–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ [–¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ CLIP]<br>
‚áõ <code>eye</code> [–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞] - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–∑–∞ –±–æ–≥–∞<br>
‚áõ <code>dem</code> [–¢–µ–∫—Å—Ç] - –î–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä<br>
‚áõ <code>send</code> [–ê–π–¥–∏] - –ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É, –∑–Ω–∞—è –µ–≥–æ –∞–π–¥–∏<br>
‚áõ <code>link</code> [–°—Å—ã–ª–∫–∞] [–¢–µ–∫—Å—Ç] - –°—Å—ã–ª–∫–∞ –≤ —Ç–µ–∫—Å—Ç–µ<br>
‚áõ <code>chance</code> [–¢–µ–∫—Å—Ç] - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —à–∞–Ω—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä "–ö–ª–∏–ø —Ç–æ–ø? –®–∞–Ω—Å—ã 100%)<br>
‚áõ –†–µ–ø—É—Ç–∞—Ü–∏—è<br>
<h3>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</h3>
‚áõ <code>ban</code> - –ë–∞–Ω<br>
‚áõ <code>unban</code> - –†–∞–∑–±–∞–Ω<br>
‚áõ <code>kick</code> - –ö–∏–∫<br>
‚áõ <code>mute</code> - –ú—É—Ç<br>
‚áõ <code>unmute</code> - –†–∞–∑–º—É—Ç<br>
‚áõ <code>aprefix</code> - –í—ã–¥–∞—á–∞ –∑–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞<br>
‚áõ <code>admin</code> - –í—ã–¥–∞—á–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞<br>
‚áõ <code>unadmin</code> - –†–∞–∑–∂–∞–ª–æ–≤–∞–Ω–∏–µ –ê–¥–º–∏–Ω–∞<br>
‚áõ <code>invite</code> (–Æ–∑–µ–π—Ä–Ω–µ–π–º - @) - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ —á–∞—Ç<br>
‚áõ <code>kickall</code> - –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å —á–∞—Ç–∞<br>
‚áõ <code>kickall hide</code> - –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö (—Å–∫—Ä—ã—Ç–æ)<br>
‚áõ <code>leave</code> - –í—ã–π—Ç–∏ —Å —á–∞—Ç–∞<br>
‚áõ <code>pin</code> - –ó–∞–∫—Ä–µ–ø–∏—Ç—å<br>
‚áõ <code>unpin</code> - –û—Ç–∫—Ä–µ–ø–∏—Ç—å<br>
<br>
–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ <b>–ø–æ–º–æ—â—å</b>, –ø–∏—à–∏ <b><a href="https://t.me/artur_destroyer">@artur_destroyer</a></b><br>
"""
        response = telegraph.create_page(
            'Clip Userbot –ü–æ–º–æ—â—å',
            html_content=f'{helpp}'
        )
        linkes = response['path']
        link = f'https://telegra.ph/{linkes}'
        await message.edit(f"""
<b>üöë | –ú–µ–Ω—é –ø–æ–º–æ—â–∏</b>
<b>üîí | –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {version}

<b><a href="https://t.me/ClipUserbot">üôä | –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π CLIP.</a></b>
<b><a href={link}>‚ùì | –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ </a></b>

<b><a href="https://a9fm.github.io">‚õîÔ∏è | –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—è CLIP</a></b>
<b><a href="https://t.me/dontcryplzs">‚ùï | –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ CLIP</a></b>

‚ù§Ô∏è | –ú—ã –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —é–∑–µ—Ä–±–æ—Ç–∞ –∏ –∂–µ–ª–∞–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è.
‚ù§Ô∏è | –ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –±–∞–≥–∏,–º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—é, –ø–æ–º–æ—â–Ω–∏–∫—É, –ª–∏–±–æ –∂–µ –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
""", disable_web_page_preview=True)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –î–æ–ø –∫–æ–¥ –Ω–∞ —Ä–µ—Å—Ç–∞—Ä—Ç
async def restart(message: Message, restart_type):
    if restart_type == "update":
        text = "1"
    else:
        text = "2"
    try:
        await os.execvp(
            "python3",
            [
                "python3",
                "bot.py",
                f"{message.chat.id}",
                f"{message.message_id}",
                f"{text}",
            ],
        )
    except:
        await os.execvp(
            "python",
            [
                "python",
                "bot.py",
                f"{message.chat.id}",
                f"{message.message_id}",
                f"{text}",
            ],
        )


# –†–µ—Å—Ç–∞—Ä—Ç
@app.on_message(filters.command("restart", prefix) & filters.me)
async def restartt(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –Æ–∑–µ—Ä–±–æ—Ç –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.delete()
        await app.send_audio(message.chat.id, "stop.ogg",
                             "üï¶ | –ò–¥—ë—Ç <b>–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        await restart(message, restart_type="restart")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –û–±–Ω–æ–≤—ã
@app.on_message(filters.command("update", prefix) & filters.me)
async def updatte(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –Æ–∑–µ—Ä–±–æ—Ç –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("üï¶ | –ò–¥—ë—Ç <b>–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ")
        os.remove("bot.py")
        wget.download("https://raw.githubusercontent.com/A9FM/ClipUserbot/main/bot.py", "bot.py")
        await restart(message, restart_type="update")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –û–±–Ω–æ–≤—ã –±–µ—Ç–∞
@app.on_message(filters.command("beta", prefix) & filters.me)
async def beta(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –Æ–∑–µ—Ä–±–æ—Ç –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω [–ë–µ—Ç–∞]"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("üï¶ | –ò–¥—ë—Ç <b>–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—é</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        os.remove("bot.py")
        wget.download("https://raw.githubusercontent.com/A9FM/ClipUserbot/beta/bot.py", "bot.py")
        await restart(message, restart_type="update")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ü—Ä–µ—Ñ–∏–∫—Å
@app.on_message(filters.command("sp", ".") & filters.me)
async def pref(client: Client, message: Message):
    if len(message.command) > 1:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü—Ä–µ—Ñ–∏–∫—Å –±—ã–ª —Å–º–µ–Ω—ë–Ω –Ω–∞ [ " + message.command[1] + " ]"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        prefix = message.command[1]
        print(message.command)
        config.set("prefix", "prefix", prefix)
        with open(config_path, "w") as config_file:
            config.write(config_file)
        await message.edit(
            f"<b>‚úÖ | –ü—Ä–µ—Ñ–∏–∫—Å [ <code>{prefix}</code> ] —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>\n‚è≥ | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏"
        )
        await restart(message, restart_type="restart")
    else:
        await message.edit("<b>‚ö†Ô∏è | –ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!</b>")


# –†–µ–ø—É—Ç–∞—Ü–∏—è
@app.on_message(filters.text & filters.incoming & filters.regex("^\-$") & filters.reply)
async def repMinus(client: Client, message: Message):
    try:
        if message.reply_to_message.from_user.is_self:
            now = datetime.datetime.now()
            timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
            l0g = logi + timnow + "\n‚ï∞ –†–µ–ø—É—Ç–∞—Ü–∏—è –±—ã–ª–∞ –ø–æ–Ω–∏–∂–µ–Ω–∞\n\n"

            with open("rep.txt", "r+") as f:
                data1 = f.read()
                dat = int(data1)
                num = 1
                rep = dat - num
                repo = str(rep)
                f.close()
            with open("rep.txt", "w+") as f:
                repo = str(rep)
                f.write(repo)
                f.close()
                text = "‚ùé –û—Å—É–∂–¥–µ–Ω–∏–µ –æ–∫–∞–∑–∞–Ω–æ (-1)\nüåê –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: " + str(repo) + ""
                await message.reply_text(text)
            log = l0g + "‚ùé –û—Å—É–∂–¥–µ–Ω–∏–µ –æ–∫–∞–∑–∞–Ω–æ (-1)\nüåê –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: " + str(repo) + ""
            await app.send_message("ClipUSERBOT_LOGGERbot", log)
    except:
        pass


@app.on_message(filters.text & filters.incoming & filters.regex("^\+$") & filters.reply)
async def repPlus(client: Client, message: Message):
    try:
        if message.reply_to_message.from_user.is_self:
            now = datetime.datetime.now()
            timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
            l0g = logi + timnow + "\n‚ï∞ –†–µ–ø—É—Ç–∞—Ü–∏—è –±—ã–ª–∞ –ø–æ–≤—ã—à–µ–Ω–∞\n\n"

            with open("rep.txt", "r+") as f:
                data = f.read()
                data = int(data)
                num = 1
                rep = data + num
                repo = str(rep)
                f.close()
            with open("rep.txt", "w+") as f:
                repo = str(rep)
                f.write(repo)
                f.close()
                text = (
                        "‚úÖ –£–≤–∞–∂–µ–Ω–∏–µ –æ–∫–∞–∑–∞–Ω–æ (+1)\nüåê –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: " + str(repo) + ""
                )
                await message.reply_text(text)
            log = (
                    l0g + "‚úÖ –£–≤–∞–∂–µ–Ω–∏–µ –æ–∫–∞–∑–∞–Ω–æ (+1)\nüåê –¢–µ–∫—É—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è: " + str(repo) + ""
            )
            await app.send_message("ClipUSERBOT_LOGGERbot", log)
    except:
        pass

# –®–∞–Ω—Å—ã
@app.on_message(filters.command("chance", prefix) & filters.me)
async def chance(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –®–∞–Ω—Å"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)
        text = message.text.split(prefix + "chance ", maxsplit=1)[1]
        await message.edit(f"{text}\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å {random.randint(1, 100)}%")

    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:
            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–Ω—Å–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")

# –°—Å—ã–ª–∫–∞ –≤ —Ç–µ–∫—Å—Ç–µ

@app.on_message(filters.command("link", prefix) & filters.me)
async def chance(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°—Å—ã–ª–∫–∞ –≤ —Ç–µ–∫—Å—Ç–µ"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        link = message.command[1]
        text = " ".join(message.command[2:])
        await message.delete()
        await app.send_message(message.chat.id, f'<a href="{link}">{text}</a>', disable_web_page_preview=True)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:
            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°—Å—ã–ª–∫–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
@app.on_message(filters.command("progressbar", prefix) & filters.me)
async def Progressbar(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        text = message.text.split(prefix + "progressbar ", maxsplit=1)[1]
        import time
        total = 100
        bar_length = 20
        for i in range(total + 1):
            percent = 100.0 * i / total
            time.sleep(0.0001)
            await message.edit(
                text + "\n[{:{}}] {:>3}%".format("‚ñà" * int(percent / (100.0 / bar_length)), bar_length, int(percent)))
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ—Ç–µ–ª—é –∑–Ω–∞—è –µ–≥–æ –∞–π–¥–∏
@app.on_message(filters.command("send", prefix) & filters.me)
async def sendtoid(client: Client, message: Message):
    try:
        await app.unblock_user(message.command[1])
        await message.edit(f"üí¨ | –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.command[1]}")
        await app.send_message(message.command[1], "–ü—Ä–∏–≤–µ—Ç!")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∞–π–¥–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ê–π–¥–∏
@app.on_message(filters.command("id", prefix) & filters.me)
async def id(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ id"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        if message.reply_to_message is None:
            await message.edit(f"üë§ | –ê–π–¥–∏ –ß–∞—Ç–∞: {message.chat.id}")
        else:
            id = f"üë§ | –ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.reply_to_message.from_user.id}\nüì¢ | –ê–π–¥–∏ —á–∞—Ç–∞: {message.chat.id}"
            await message.edit(id)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –∫–æ–º–∞–Ω–¥–∞ id"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –°–ø–∞–º —Å—Ç–∏–∫–µ—Ä–∞–º–∏
@app.on_message(filters.command("stspam", prefix) & filters.me)
async def spam(client: Client, message: Message):
    try:
        if not message.text.split(prefix + "stspam", maxsplit=1)[1]:
            await message.edit("<i>–ö–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ</i>")
            return
        count = message.command[1]
        slep = message.command[2]
        sticker = message.command[3]
        count = int(count)
        slep = int(slep)
        await message.delete()

        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—É—â–µ–Ω —Å–ø–∞–º"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        for _ in range(count):
            await app.send_sticker(message.chat.id, sticker)
            await asyncio.sleep(slep)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—É—â–µ–Ω —Å–ø–∞–º"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ë–æ–º–±–µ—Ä
@app.on_message(filters.command("bomber", prefix) & filters.me)
async def b0mb3r(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—É—â–µ–Ω –±–æ–º–±–µ—Ä"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ–º–±–µ—Ä")
        global bombe
        print("""
 _____                 _               
|  _  |               | |              
| |_) | ___  _ __ ___ | |__   ___ _ __ 
|  _ < / _ \| '_ ` _ \| '_ \ / _ \ '__|
| |_) | (_) | | | | | | |_) |  __/ |   
|____/ \___/|_| |_| |_|_.__/ \___|_|   
""")

        bombe = subprocess.Popen(["bomber"], stdout=subprocess.PIPE)
        await asyncio.sleep(5)
        await message.edit("–ë–æ–º–±–µ—Ä –∑–∞–ø—É—â–µ–Ω!\n–°—Å—ã–ª–∫–∞: 127.0.0.1:8080")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("sbomber", prefix) & filters.me)
async def sbomber(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ë–æ–º–±–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        bombe.terminate()
        await message.edit("–ë–æ–º–±–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Å–≤–æ—é —Ä–æ–±–æ—Ç—É...")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("bbomber", prefix) & filters.me)
async def bbomber(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ bbomber –≤–∫–ª—é—á—ë–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)
        bomber = message.command[1]
        await app.unblock_user("BomberFree_bot")
        await app.unblock_user("couldboombot")
        await app.unblock_user("TNT_Robot")
        await message.edit("–ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤")
        await asyncio.sleep(2)
        await app.send_message("couldboombot", "‚ö°Ô∏è–ó–∞–ø—É—Å—Ç–∏—Ç—å Spam")
        await app.send_message("TNT_Robot", "üß® –ë–æ–º–±–∏—Ç—å")
        await asyncio.sleep(2)
        await app.send_message("BomberFree_bot", bomber)
        await app.send_message("couldboombot", bomber)
        await app.send_message("TNT_Robot", bomber + " 15")
        result = "–ë–æ–º–±–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –Ω–æ–º–µ—Ä " + message.command[1]
        await message.edit(result)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –î–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä
@app.on_message(filters.command("dem", prefix) & filters.me)
async def demotivator(client: Client, message: Message):
    await message.edit("‚è≥ | –°–æ–∑–¥–∞—é –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –î–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        if message.reply_to_message.photo:
            await app.unblock_user("memegeneration_bot")
            donwloads = await app.download_media(message.reply_to_message.photo.file_id)
            tuxt = message.text.split(prefix + "dem ", maxsplit=1)[1]
            text = "1. " + tuxt
            await app.send_photo(chat_id="memegeneration_bot", photo=donwloads, caption=text)
            await asyncio.sleep(4)
            iii = await app.get_history("memegeneration_bot")
            donwloads = await app.download_media(iii[0].photo.file_id)
            await app.send_photo(chat_id=message.chat.id, photo=donwloads)
            await message.delete()
            os.rmdir("/downloads/")
        else:
            await message.edit("‚ùóÔ∏è | –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–ø–ª–∞–π –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –î–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –í—Ä–µ–º—è
@app.on_message(filters.command("time", prefix) & filters.me)
async def time(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("%d.%m.%Y\n–í—Ä–µ–º—è %H:%M:%S")
        timenow = "–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ : " + timnow
        await message.edit(timenow)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ß–∏—Ç—ã —Ä–µ–ø—É—Ç–∞—Ü–∏—è
@app.on_message(filters.command("rep", prefix) & filters.me)
async def repNakrutka(client: Client, message: Message):
    try:
        with open("rep.txt", "w+") as f:
            num = int(message.command[1])
            rep = num
            repo = str(rep)
            f.write(repo)
            f.close()
            text = "‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å–≤–æ—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é.\n üóìÔ∏è | –†–µ–ø—É—Ç–∞—Ü–∏—è " + str(repo) + ""
            await message.edit(text)

        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = (
                logi
                + timnow
                + "\n‚ï∞ –ù–∞–∫—Ä—É—á–µ–Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è\n\n‚ù§Ô∏è –†–µ–ø—É—Ç–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ ‚ù§Ô∏è\nüîù –†–µ–ø—É—Ç–∞—Ü–∏—è "
                + str(repo)
                + " üîù"
        )
        await app.send_message("ClipUSERBOT_LOGGERbot", log)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        await message.edit(
            f"‚ùï | –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!\nüóìÔ∏è | –†–µ–ø—É—Ç–∞—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ 0\n‚ùì | –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ '.rep'")
        with open("rep.txt", "w+") as f:
            num = int(0)
            rep = num
            repo = str(rep)
            f.write(repo)
            f.close()


# –°–ø–∞–º
@app.on_message(filters.command("spam", prefix) & filters.me)
async def spam(client: Client, message: Message):
    try:
        if not message.text.split(prefix + "spam", maxsplit=1)[1]:
            await message.edit("<i>–ö–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ</i>")
            return
        count = message.command[1]
        slep = message.command[2]
        text = " ".join(message.command[3:])
        count = int(count)
        slep = int(slep)
        await message.delete()

        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—É—â–µ–Ω —Å–ø–∞–º"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        for _ in range(count):
            await app.send_message(message.chat.id, text)
            await asyncio.sleep(slep)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—É—â–µ–Ω —Å–ø–∞–º"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞
@app.on_message(filters.command("webshot", prefix) & filters.me)
async def webshot(client: Client, message: Message):
    try:
        try:
            if len(message.text.split()) < 2:
                await message.edit("<i>–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.</i>")
                return
            user_link = message.command[1]
            await message.delete()
            full_link = (
                "https://mini.s-shot.ru/1366x768/JPEG/1024/Z100/?{}".format(
                    user_link
                )
            )
            await app.send_photo(
                message.chat.id, full_link, caption=f"<b>–°—Å—ã–ª–∫–∞ ‚ü∂ {user_link}</b>"
            )

            now = datetime.datetime.now()
            timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
            log = logi + timnow + "\n‚ï∞ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞"
            await app.send_message("ClipUSERBOT_LOGGERbot", log)
        except:
            if len(message.text.split()) < 2:
                await message.edit("<i>–ù–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.</i>")
                return
            user_link = message.command[1]
            await message.delete()
            full_link = (
                "https://webshot.deam.io/{}/?width=1920&height=1080?type=png".format(
                    user_link
                )
            )
            await app.send_photo(
                message.chat.id, full_link, caption=f"<b>–°—Å—ã–ª–∫–∞ ‚ü∂ {user_link}</b>"
            )

            now = datetime.datetime.now()
            timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
            log = logi + timnow + "\n‚ï∞ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞"
            await app.send_message("ClipUSERBOT_LOGGERbot", log)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")


# –í–∏–¥–µ–æ —Å —é—Ç—É–±
@app.on_message(filters.command("yt", prefix) & filters.me)
async def yt(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        linked = message.command[1]
        await message.edit("‚è≥ | –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ. –≠—Ç–æ –∑–∞–π–º—ë—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è... (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≤–∏–¥–µ–æ)")
        ydl_opts = {
            "outtmpl": "video.mp4",
        }
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            ydl.download([linked])
        await message.edit("‚è≥ | –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ. –≠—Ç–æ –∑–∞–π–º—ë—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è... (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≤–∏–¥–µ–æ)")
        await app.send_video(
            chat_id=message.chat.id,
            video="video.mp4",
            caption="–û—Ä–∏–≥–∏–Ω–∞–ª: " + message.command[1],
        )
        await message.delete()
        os.remove("video.mp4")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("myt", prefix) & filters.me)
async def myt(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–≤—É–∫–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        myth = "youtube-dl -f 140 " + message.command[1] + " -o music.m4a"
        await message.edit("‚è≥ | –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∏. –≠—Ç–æ –∑–∞–π–º—ë—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∏)")
        os.system(myth)
        await message.edit("‚è≥ | –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∏. –≠—Ç–æ –∑–∞–π–º—ë—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∏)")
        await app.send_audio(
            chat_id=message.chat.id,
            audio="music.m4a",
            caption="‚ùï –î–∞–Ω–Ω–∞—è –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∞ –±—ã–ª–∞ –≤–∑—è—Ç–∞ —Å –≤–∏–¥–µ–æ " + message.command[1],
        )
        await message.delete()
        os.remove("music.m4a")

    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()

    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∑–≤—É–∫–∞ —Å –≤–∏–¥–µ–æ"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ü—Ä–∏–∑—ã–≤ –≤—Å–µ—Ö
@app.on_message(filters.command("tagall", prefix) & filters.me)
async def tagall(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –û—Ç–º–µ—á–µ–Ω—ã –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        slep = message.command[1]
        slep = int(slep)
        slepe = str(slep)
        args = " ! "
        if len(message.text.split()) >= 2:
            args = message.text.split(prefix + "tagall " + slepe, maxsplit=1)[1]
        await message.delete()
        chat_id = message.chat.id
        string = ""
        limit = 1
        members = app.iter_chat_members(chat_id)
        async for member in members:
            tag = member.user.username
            if limit <= 10:
                if tag != None:
                    string += f"<a href='https://t.me/{tag}'>·†ã</a> "
                else:
                    string += f"<a href='tg://user?id={member.user.id}'>·†ã</a> "
                limit += 1
            else:
                text = f"{args} |{string}"
                await app.send_message(chat_id, text, disable_web_page_preview=True)
                limit = 1
                string = ""
                await asyncio.sleep(slep)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –û—Ç–º–µ—á–µ–Ω—ã –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –£–¥–∞–ª–∏—Ç—å —Å–º—Å
@app.on_message(filters.command("del", prefix) & filters.me)
async def delete_messages(client: Client, message: Message):
    try:
        if message.reply_to_message:
            try:
                now = datetime.datetime.now()
                timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
                log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
                await app.send_message("ClipUSERBOT_LOGGERbot", log)
                message_id = message.reply_to_message.message_id
                await app.delete_messages(message.chat.id, message_id)
                await message.delete()
            except FloodWait as e:
                mylastname = me.last_name
                await app.update_profile(last_name=f"{mylastname} | –§–ª—É–¥–≤–µ–π—Ç")
                await asyncio.sleep(e.x)
                await app.update_profile(last_name=f"{mylastname}")
            except Exception as erryr:
                now = datetime.datetime.now()
                timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
                log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
                await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
                await message.edit(
                    f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")
    except:
        pass


# –ü—É—Ä–¥–∂
@app.on_message(filters.command("purge", prefix) & filters.me)
async def purge(client: Client, message: Message):
    try:
        if message.reply_to_message:
            now = datetime.datetime.now()
            timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
            log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
            await app.send_message("ClipUSERBOT_LOGGERbot", log)

            r = message.reply_to_message.message_id
            m = message.message_id
            msgs = []
            await message.delete()
            v = m - r
            while r != m:
                msgs.append(int(r))
                r += 1
            await app.delete_messages(message.chat.id, msgs)
            r = message.reply_to_message.message_id
            msgs = []
            while r != m:
                msgs.append(int(r))
                r += 1
            await app.delete_messages(message.chat.id, msgs)
            await app.send_message(message.chat.id, f"<b>‚úÖ | –£–¥–∞–ª–µ–Ω–æ > {v} —Å–æ–æ–±—â–µ–Ω–∏–π!</b>")
        else:
            await message.edit("<i>‚ùóÔ∏è | –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ä–µ–ø–ª–∞–π.</i>")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ö–æ–º–∞–Ω–¥–∞ type
@app.on_message(filters.command("type", prefix) & filters.me)
async def type(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–º–∞–¥–∞ type"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        orig_text = message.text.split(prefix + "type ", maxsplit=1)[1]
        text = orig_text
        tbp = ""
        typing_symbol = "‚ñí"
        while tbp != orig_text:
            joper = tbp + typing_symbol
            await message.edit(str(joper))
            await asyncio.sleep(0.10)
            tbp = tbp + text[0]
            text = text[1:]
            await message.edit(str(tbp))
            await asyncio.sleep(0.10)

    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ type"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –õ–µ—Å—Ç–Ω–∏—Ü–∞
@app.on_message(filters.command("ladder", prefix) & filters.me)
async def ladder(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ ladder"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        orig_text = message.text.split(prefix + "ladder ", maxsplit=1)[1]
        text = orig_text
        output = []
        for i in range(len(text) + 1):
            output.append(text[:i])
        ot = "\n".join(output)
        await message.edit(ot)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ ladder"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# Quotes
@app.on_message(filters.command("q", prefix) & filters.me)
async def quotly(client: Client, message: Message):
    if not message.reply_to_message:
        await message.edit("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –°–æ–∑–¥–∞–Ω–∞ —Ü–∏—Ç–∞—Ç–∞"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    await app.unblock_user("QuotLyBot")
    await message.edit("‚åõÔ∏è | –°–æ–∑–¥–∞—é —Ü–∏—Ç–∞—Ç—É. –ù–∞ —ç—Ç–æ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –Ω–µ–º–Ω–æ–≥–æ –≤–∞—à–µ–≥–æ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.")
    await message.reply_to_message.forward("QuotLyBot")
    await asyncio.sleep(5)
    iii = await app.get_history("QuotLyBot")
    await message.delete()
    await app.forward_messages(message.chat.id, "QuotLyBot", iii[0].message_id)


# –ù–æ—Ç–µ—Å
@app.on_message(filters.command("mnotes", prefix) & filters.me)
async def mnotes(client: Client, message: Message):
    try:
        if not message.reply_to_message:
            await message.edit("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Notes"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...")
        await app.unblock_user("ClipUSERBOT_NOTESbot")
        await message.reply_to_message.forward("ClipUSERBOT_NOTESbot")
        await asyncio.sleep(1)
        iii = await app.get_history("ClipUSERBOT_NOTESbot")

        with open("notes.txt", "r+") as f:
            notes = f.read()
            notesss = str(notes)
            f.close()
        with open("notes.txt", "w+") as f:
            name1 = message.text.split(prefix + "mnotes ", maxsplit=1)[1]
            notess = f"{notesss}\n{name1} - {prefix}notes {iii[0].message_id}"
            f.write(notess)
            f.close()

        await message.edit(
            f"‚úÖ | –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!\n–î–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ <code>{prefix}notes {iii[0].message_id}</code>\n–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ <code>.mynotes</code>")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Notes"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("notes", prefix) & filters.me)
async def notes(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ notes"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)
        numbermess = int(message.command[1])
        await message.edit("–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        await app.unblock_user("ClipUSERBOT_NOTESbot")
        await app.forward_messages(message.chat.id, "ClipUSERBOT_NOTESbot", numbermess)
        await message.delete()
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Notes"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("mynotes", prefix) & filters.me)
async def notes(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ mynotes"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        with open("notes.txt", "r+") as f:
            notesi = f.read()
            notesssssss = str(notesi)
            await message.edit(notesssssss)
            f.close()
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ mynotes"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
@app.on_message(filters.command("spamban", prefix) & filters.me)
async def spamban(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("‚è≥ | –ü—Ä–æ–≤–µ—Ä—è—é —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ø–∞–º-–±–∞–Ω–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
        await app.unblock_user("spambot")
        await app.send_message("spambot", "/start")
        await asyncio.sleep(1)
        iii = await app.get_history("spambot")
        await message.delete()
        await app.forward_messages(message.chat.id, "spamBot", iii[0].message_id)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å –≥—Ä—É–ø–ø—ã (200 —É—á –ª–∏–º–∏—Ç)
@app.on_message(filters.command('kickall', prefix) & filters.me)
async def kickall(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("‚ÄºÔ∏è | –ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —á–∞—Ç–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.)")
        num = 0
        for all in app.iter_chat_members(message.chat.id):
            try:
                num = + 1
                await app.kick_chat_member(message.chat.id, all.user.id, 0)
            except:
                pass
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ "
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit("–û—à–∏–±–∫–∞!\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command('kickall hide', prefix) & filters.me)
async def kickall(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.delete()
        num = 0
        for all in app.iter_chat_members(message.chat.id):
            try:
                num = + 1
                await app.kick_chat_member(message.chat.id, all.user.id, 0)
            except:
                pass
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–°–∫—Ä—ã—Ç–Ω–æ)"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit("–û—à–∏–±–∫–∞!\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: @ClipUSERBOT_LOGGERbot")


# –ò–Ω—Ñ–∞
@app.on_message(filters.command("infofull", prefix) & filters.me)
async def info(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        if message.reply_to_message:
            username = message.reply_to_message.from_user.username
            id = message.reply_to_message.from_user.id
            first_name = message.reply_to_message.from_user.first_name
            user_link = message.reply_to_message.from_user.mention
            last_name = message.reply_to_message.from_user.last_name
            number = message.reply_to_message.from_user.phone_number
        else:
            username = message.from_user.username
            id = message.from_user.id
            first_name = message.from_user.first_name
            user_link = message.from_user.mention
            last_name = message.from_user.last_name
            number = "–°–∫—Ä—ã—Ç–æ [CLIP]"
        text = f"""
‚ï≠ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>:
‚îÉ –ê–π–¥–∏: <code>{id}</code>
‚îÉ –ò–º—è: {first_name}
‚îÉ –§–∞–º–∏–ª–∏—è: {last_name}
‚îÉ –Æ–∑–µ—Ä–Ω–µ–π–º: @{username}
‚îÉ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {number}
‚ï∞ –°—Å—ã–ª–∫–∞: {user_link}
"""
        await message.edit(text, parse_mode="HTML")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("info", prefix) & filters.me)
async def info(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        if message.reply_to_message:
            username = message.reply_to_message.from_user.username
            id = message.reply_to_message.from_user.id
            first_name = message.reply_to_message.from_user.first_name
            user_link = message.reply_to_message.from_user.mention
        else:
            username = message.from_user.username
            id = message.from_user.id
            first_name = message.from_user.first_name
            user_link = message.from_user.mention
        text = f"""
‚ï≠ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>:
‚îÉ –ê–π–¥–∏: <code>{id}</code>
‚îÉ –ò–º—è: {first_name}
‚îÉ –Æ–∑–µ—Ä–Ω–µ–π–º: @{username}
‚ï∞ –°—Å—ã–ª–∫–∞: {user_link}"""
        await message.edit(text, parse_mode="HTML")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ü–∏–Ω–≥
@app.on_message(filters.command("ping", prefix) & filters.me)
async def ping(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–∏–Ω–≥"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        start = perf_counter()
        await message.edit("Pong")
        end = perf_counter()
        ping2 = end - start
        ping = ping2 * 1000

        if 0 <= ping <= 199:
            await message.edit(
                f"<b>üèì –ü–æ–Ω–≥\nüì∂</b> {round(ping)} –º—Å\nüü¢ –°—Ç–∞–±–∏–ª—å–Ω–æ–µ"
            )
        if 199 <= ping <= 400:
            await message.edit(
                f"<b>üèì –ü–æ–Ω–≥\nüì∂</b> {round(ping)} –º—Å\nüü† –•–æ—Ä–æ—à–µ–µ"
            )
        if 400 <= ping <= 600:
            await message.edit(
                f"<b>üèì –ü–æ–Ω–≥\nüì∂</b> {round(ping)} –º—Å\nüî¥ –ù–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ"
            )
        if 600 <= ping:
            await message.edit(
                f"<b>üèì –ü–æ–Ω–≥\nüì∂</b> {round(ping)} –º—Å\n‚ö† –ü–µ—Ä–µ–ø–∞–¥—ã —Å–≤—è–∑–∏"
            )
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–∏–Ω–≥"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –°–æ–∫—Ä–∞—Ç–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫
linkToken = "6c2ac1846a1c1A2d5f88A3E5fbf0e14fcf96d7d0"


async def link_short(link: str):
    async with ClientSession(headers={"Authorization": f"API-Key {linkToken}"}) as ses:
        async with ses.post("https://api.waa.ai/v2/links", json={"url": link}) as resp:
            return await resp.json()


@app.on_message(filters.command("short", prefix) & filters.me)
async def shorten_link_command(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞ —Å—Å—ã–ª–∫–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        if message.reply_to_message:
            link = message.reply_to_message.text
        else:
            try:
                link = message.command[1]
            except IndexError:
                return await message.delete()
        output = (await link_short(link))["data"]
        await message.edit(f'–°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞: {output["link"]}')
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# QR-code
content_filter = filters.create(lambda _, __, msg: bool(get_cmd_content(msg)))


def get_cmd_content(message: Message):
    if message.reply_to_message:
        content = message.reply_to_message.text
    elif len(message.text.split(maxsplit=1)) == 2:
        content = message.text.split(maxsplit=1)[1]
    else:
        content = ""
    return content


@app.on_message(filters.command("qr", prefix) & filters.me & content_filter)
async def qr_cmd(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–æ–∑–¥–∞–Ω qr-code"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        text = get_cmd_content(message)
        await message.delete()
        async with ClientSession() as session:
            async with session.head(
                    "https://api.qrserver.com/v1/create-qr-code/", params={"data": text}
            ) as resp:
                await app.send_photo(
                    chat_id=message.chat.id,
                    photo=str(resp.url),
                    parse_mode=None,
                )
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ QR-CODE"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –í–∏–∫–∏–ø–µ–¥–∏—è
@app.on_message(filters.command("wiki", prefix) & filters.me)
async def wiki(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–æ–∏—Å–∫ –≤ –≤–∏–∫–∏–ø–µ–¥–∏–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        lang = message.command[1]
        user_request = " ".join(message.command[2:])
        await message.edit("<b>–ò—â–µ–º –∏–Ω—Ñ—É</b>")
        if user_request == "":
            wikipedia.set_lang("ru")
            user_request = " ".join(message.command[1:])
        try:
            if lang == "en":
                wikipedia.set_lang("en")

            result = wikipedia.summary(user_request)
            await message.edit(
                f"""<b>–°–ª–æ–≤–æ:</b>
<code>{user_request}</code>

<b>–ó–Ω–∞—á–µ–Ω–∏–µ:</b>
<code>{result}</code>"""
            )
        except Exception as exc:
            await message.edit(
                f"""<b>Request:</b>
<code>{user_request}</code>
<b>Result:</b>
<code>{exc}</code>"""
            )
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í–∏–∫–∏–ø–µ–¥–∏—è"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏
@app.on_message(filters.command("sw", prefix) & filters.me)
async def switch(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ sw"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        text = " ".join(message.command[1:])
        ru_keys = """—ë–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.–Å"‚Ññ;%:?–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠/–Ø–ß–°–ú–ò–¢–¨–ë–Æ,"""
        en_keys = """`qwertyuiop[]asdfghjkl;'zxcvbnm,./~@#$%^&QWERTYUIOP{}ASDFGHJKL:"|ZXCVBNM<>?"""
        if text == "":
            if message.reply_to_message:
                reply_text = message.reply_to_message.text
                change = str.maketrans(ru_keys + en_keys, en_keys + ru_keys)
                reply_text = str.translate(reply_text, change)
                await message.edit(reply_text)
            else:
                await message.edit("–¢–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                await asyncio.sleep(3)
                await message.delete()
        else:
            change = str.maketrans(ru_keys + en_keys, en_keys + ru_keys)
            text = str.translate(text, change)
            await message.edit(text)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ sw"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –®–∏—Ñ—Ä–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@app.on_message(filters.command("cl", prefix) & filters.me)
async def switch(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ cl"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        text = " ".join(message.command[1:])
        ru_keys = """—ë–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.–Å"‚Ññ;%:?–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠/–Ø–ß–°–ú–ò–¢–¨–ë–Æ,"""
        en_keys = """Áï∞È´îÂ≠ó‰Ωì‚ô¨‚ôù‚ôû‚ôüŒ≥Œ¥ŒµŒ∑Œ∏Œ∫ŒªŒºŒΩZXM‚à©SŒ¨·∫±·∫´ƒÉ«Ω·∫≥√üŒ≤–Ç‡∏ø‚Ñ¢ƒëƒè√ê√∞”ò“æŒ£ƒ§ƒ¶“§·∏¶ƒ•—õ“•·∏ß≈í≈ì√ò·ª¢$≈õ≈ü≈ù≈°·πß·π©·µ¥ÔÆê¬ß‚ôå‚ôç‚ôé‚ôè‚ôê‚ôë‚ôí‚ôì‚úµ‚ú∂‚ú∑‚ú∏‚úπ"""
        if text == "":
            if message.reply_to_message:
                reply_text = message.reply_to_message.text
                change = str.maketrans(ru_keys + en_keys, en_keys + ru_keys)
                reply_text = str.translate(reply_text, change)
                await message.edit(reply_text)
            else:
                await message.edit("–¢–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                await asyncio.sleep(3)
                await message.delete()
        else:
            change = str.maketrans(ru_keys + en_keys, en_keys + ru_keys)
            text = str.translate(text, change)
            await message.edit(text)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ cl"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ü–æ–≥–æ–¥–∞
def get_pic(city):
    file_name = f"{city}.png"
    with open(file_name, "wb") as pic:
        response = requests.get("http://wttr.in/{citys}_2&lang=ru.png", stream=True)

        if not response.ok:
            print(response)

        for block in response.iter_content(1024):
            if not block:
                break

            pic.write(block)
        return file_name


# –ü–æ–≥–æ–¥–∞
@app.on_message(filters.command("weather", prefix) & filters.me)
async def weather(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–æ–≥–æ–¥–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        city = message.command[1]
        await message.edit("üïë –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—é –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ")
        r = requests.get(f"https://wttr.in/{city}?m?M?0?q?T&lang=ru")
        await message.edit(f"üó∫ –í–∞—à –≥–æ—Ä–æ–¥ : {r.text}")
        await app.send_photo(
            chat_id=message.chat.id,
            photo=get_pic(city),
            reply_to_message_id=message.message_id,
        )
        os.remove(f"{city}.png")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–æ–≥–æ–¥–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω
@app.on_message(filters.command("online", prefix) & filters.me)
async def online(client: Client, message: Message):
    try:
        online = True
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("‚úÖ | –í–∫–ª—é—á—ë–Ω –≤–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω")
        while online == True:
            await app.unblock_user("mafia_statistics_bot")
            await app.send_message("mafia_statistics_bot", "–æ–∫")
            iii = await app.get_history("mafia_statistics_bot")
            await app.delete_messages("mafia_statistics_bot", iii[0].message_id)
            await asyncio.sleep(60)
        else:
            await app.block_user("mafia_statistics_bot")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("offline", prefix) & filters.me)
async def offline(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–µ—á–Ω–æ–≥–æ –æ–Ω–ª–∞–π–Ω–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await message.edit("‚ùé | –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω –æ—Ç–∫–ª—é—á—ë–Ω")
        await restart(message, restart_type="restart")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –î–µ–∞–Ω–æ–Ω - –≥–ª–∞–∑ –±–æ–≥–∞
@app.on_message(filters.command("eye", prefix) & filters.me)
async def eye(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ eye | –î–µ–∞–Ω–æ–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        await app.unblock_user("AnonymousEUEBot")
        number = message.command[1]
        await message.edit(
            f"‚è≥ | –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫–∫–∞—É–Ω—Ç {number} –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–µ–∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—è. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
        await app.send_message("AnonymousEUEBot", number)
        await asyncio.sleep(20)
        iii = await app.get_history("AnonymousEUEBot")
        await message.edit("–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏...")
        await app.forward_messages(message.chat.id, "AnonymousEUEBot", iii[0].message_id)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –î–µ–∞–Ω–æ–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏
@app.on_message(filters.command("m", prefix) & filters.me)
async def send_music(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        cmd = message.command

        song_name = ""
        if len(cmd) > 1:
            song_name = " ".join(cmd[1:])
        elif message.reply_to_message and len(cmd) == 1:
            song_name = (
                    message.reply_to_message.text or message.reply_to_message.caption
            )
        elif not message.reply_to_message and len(cmd) == 1:
            await message.edit("üëÄ | –ù–µ –≤–∏–∂—É –Ω–∞–∑–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏,–∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏")
            await asyncio.sleep(2)
            await message.delete()
            return

        song_results = await app.get_inline_bot_results("deezermusicbot", song_name)

        try:
            # send to Saved Messages because hide_via doesn't work sometimes
            saved = await app.send_inline_bot_result(
                chat_id="me",
                query_id=song_results.query_id,
                result_id=song_results.results[0].id,
                hide_via=True,
            )

            # forward as a new message from Saved Messages
            saved = await app.get_messages("me", int(saved.updates[1].message.id))
            reply_to = (
                message.reply_to_message.message_id
                if message.reply_to_message
                else None
            )
            await app.send_audio(
                chat_id=message.chat.id,
                audio=str(saved.audio.file_id),
                reply_to_message_id=reply_to,
            )

            # delete the message from Saved Messages
            await app.delete_messages("me", saved.message_id)
        except TimeoutError:
            await message.edit("That didn't work out")
            await asyncio.sleep(2)
        await message.delete()
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ú—É–∑—ã–∫–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")

        await message.edit("`‚ö†Ô∏è | –ú—É–∑—ã–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n‚ùï | –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∞.`")
        await asyncio.sleep(2)
        await message.delete()


# –¢–µ–∫—Å—Ç –≤ —Ä–µ—á—å
@app.on_message(filters.command("voice", prefix) & filters.me)
async def voice(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)
        lang_code = os.environ.get("lang_code", "ru")
        cust_lang = None
        await message.delete()
        await app.send_chat_action(message.chat.id, "record_audio")
        text = message.text.split(None, 1)[1]
        tts = gTTS(text, lang=lang_code)
        tts.save("voice.mp3")
        if message.reply_to_message:
            await app.send_voice(
                message.chat.id,
                voice="voice.mp3",
                reply_to_message_id=message.reply_to_message.message_id,
            )
        else:
            await app.send_voice(message.chat.id, voice="voice.mp3")
        await app.send_chat_action(message.chat.id, action="cancel")
        os.remove("voice.mp3")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# AFK
async def afk_handler(client: Client, message: Message):
    try:
        global start, end
        end = datetime.datetime.now().replace(microsecond=0)
        afk_time = end - start
        if message.from_user.is_bot is False:
            await message.reply_text(
                f"‚ùï –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>AFK</b>.\n" f"<b>üí¨ –ü—Ä–∏—á–∏–Ω–∞:</b> {reason}.\n" f"<b>‚è≥–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</b>: {afk_time}."
            )
    except NameError:
        pass


@app.on_message(filters.command("afk", prefix) & filters.me)
async def afk(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—Ö–æ–¥ –≤ –ê–§–ö —Ä–µ–∂–∏–º"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        global start, end, handler, reason
        start = datetime.datetime.now().replace(microsecond=0)
        handler = app.add_handler(
            MessageHandler(afk_handler, (filters.private & ~filters.me))
        )
        if len(message.text.split()) >= 2:
            reason = message.text.split(" ", maxsplit=1)[1]
        else:
            reason = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        await message.edit(f"‚ùï –í—Ö–æ–¥ –≤ <b>AFK —Ä–µ–∂–∏–º</b>.\n<b>üí¨ –ü—Ä–∏—á–∏–Ω–∞:</b> {reason}.\n")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—Ö–æ–¥ –≤ –ê–§–ö —Ä–µ–∂–∏–º"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# No AFK
@app.on_message(filters.command("unafk", prefix) & filters.me)
async def unafk(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—ã—Ö–æ–¥ —Å –ê–§–ö —Ä–µ–∂–∏–º–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        global start, end
        end = datetime.datetime.now().replace(microsecond=0)
        afk_time = end - start
        await message.edit(
            f"‚ùï | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª —Å <b>AFK —Ä–µ–∂–∏–º–∞.</b> \nüí¨ –ü—Ä–∏—á–∏–Ω–∞ <b>AFK —Ä–µ–∂–∏–º–∞:</b> {reason}\n‚è≥ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å <b>AFK:</b> {afk_time}"
        )
        app.remove_handler(*handler)

    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—ã—Ö–æ–¥ —Å –ê–§–ö —Ä–µ–∂–∏–º–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit("<b>–Ø –Ω–µ –±—ã–ª –≤ –ê–§–ö</b>")
        await asyncio.sleep(3)
        await message.delete()


# –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
@app.on_message(filters.command("hide", prefix) & filters.me)
async def hide(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –°–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—Å—Ç–∞"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    orig_text = message.text.split(prefix + "hide ", maxsplit=1)[1]
    await message.edit(orig_text)
    await asyncio.sleep(2)
    await message.delete()


# –ê–≤—Ç–æ—á—Ç–µ–Ω–∏–µ
the_regex = r"^r\/([^\s\/])+"
i = filters.chat([])


@app.on_message(i)
async def auto_read(client: Client, message: Message):
    await app.read_history(message.chat.id)
    message.continue_propagation()


@app.on_message(filters.command("autoread", prefix) & filters.me)
async def add_to_auto_read(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ê–≤—Ç–æ—á—Ç–µ–Ω–∏–µ"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        if message.chat.id in i:
            i.remove(message.chat.id)
            await message.edit("‚ùé | –ê–≤—Ç–æ—á—Ç–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ")
        else:
            i.add(message.chat.id)
            await message.edit("‚úÖ | –ê–≤—Ç–æ—á—Ç–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ê–≤—Ç–æ—á—Ç–µ–Ω–∏–µ"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ê–¥–º–∏–Ω –∫–æ–º–º–∞–Ω–¥—ã
def get_arg(message):
    msg = message.text
    msg = msg.replace(" ", "", 1) if msg[1] == " " else msg
    split = msg[1:].replace("\n", " \n").split(" ")
    if " ".join(split[1:]).strip() == "":
        return ""
    return " ".join(split[1:])


def get_args(message):
    try:
        message = message.text
    except AttributeError:
        pass
    if not message:
        return False
    message = message.split(maxsplit=1)
    if len(message) <= 1:
        return []
    message = message[1]
    try:
        split = shlex.split(message)
    except ValueError:
        return message
    return list(filter(lambda x: len(x) > 0, split))


async def CheckAdmin(message: Message):
    admin = "administrator"
    creator = "creator"
    ranks = [admin, creator]

    SELF = await app.get_chat_member(
        chat_id=message.chat.id, user_id=message.from_user.id
    )

    if SELF.status not in ranks:
        await message.edit("‚ö†Ô∏è | –Ø –Ω–µ –≤–∏–∂—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. (–Ø –≤–æ–æ–±—â–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä?üëÄ)")
        await asyncio.sleep(2)
        await message.delete()

    else:
        if SELF.status is not admin or SELF.can_restrict_members:
            return True
        else:
            await message.edit("‚ö†Ô∏è | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            await asyncio.sleep(2)
            await message.delete()


@app.on_message(filters.command("leave", prefix) & filters.me)
async def leave(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—ã—Ö–æ–¥ —Å —á–∞—Ç–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        m = await message.edit("<code>–í—Å–µ–º –ø–æ–∫–∞... [–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª —Å —á–∞—Ç–∞]</code>")
        await asyncio.sleep(2)
        await app.leave_chat(chat_id=message.chat.id)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—ã—Ö–æ–¥ —Å –≥—Ä—É–ø–ø—ã"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("ban", prefix) & filters.me)
async def ban_hammer(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ –±–∞–Ω –≤ –±–µ—Å–µ–¥–µ"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is True:
        reply = message.reply_to_message
        if reply:
            user = reply.from_user["id"]
        else:
            user = get_arg(message)
            if not user:
                await message.edit("üëÄ | –ù–µ –≤–∏–∂—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è **–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å.**")
                return
        try:
            reply = message.reply_to_message
            await app.kick_chat_member(
                message.chat.id, reply.from_user.id, int(datetime.datetime.now() + 31536000)
            )
            await message.edit(
                f'üì¢ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href="tg://user?id={reply.from_user.id}">{reply.from_user.first_name}</a> –±—ã–ª <b>–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ.</b>'
            )
        except:
            await message.edit("‚ö†Ô∏è | –Ø –Ω–µ –º–æ–≥—É **–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.**")
    else:
        await message.edit("‚ö†Ô∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ **–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.**")


@app.on_message(filters.command("unban", prefix) & filters.me)
async def unban(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–∞–Ω –≤ –±–µ—Å–µ–¥–µ"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is True:
        reply = message.reply_to_message
        if reply:
            user = reply.from_user["id"]
        else:
            user = get_arg(message)
            if not user:
                await message.edit("üëÄ | –ù–µ –≤–∏–∂—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è **—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å**")
                return
        try:
            get_user = await app.get_users(user)
            await app.unban_chat_member(chat_id=message.chat.id, user_id=get_user.id)
            await message.edit(f"‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} –±—ã–ª **—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω**")
        except:
            await message.edit("‚ö†Ô∏è | –Ø –Ω–µ –º–æ–≥—É **—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å.**")
    else:
        await message.edit("‚ö†Ô∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ **–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.**")


mute_permission = ChatPermissions(
    can_send_messages=False,
    can_send_media_messages=False,
    can_send_stickers=False,
    can_send_animations=False,
    can_send_games=False,
    can_use_inline_bots=False,
    can_add_web_page_previews=False,
    can_send_polls=False,
    can_change_info=False,
    can_invite_users=True,
    can_pin_messages=False,
)


@app.on_message(filters.command("mute", prefix) & filters.me)
async def mute_hammer(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ –º—É—Ç"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is True:
        reply = message.reply_to_message
        if reply:
            user = reply.from_user["id"]
        else:
            user = get_arg(message)
            if not user:
                await message.edit("üëÄ | –ù–µ –≤–∏–∂—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è **–æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π.**")
                return
        try:
            get_user = await app.get_users(user)
            await app.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=get_user.id,
                permissions=mute_permission,
            )
            await message.edit(f"ü§ê | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} –±—ã–ª **–æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π**.")
        except:
            await message.edit("‚ö†Ô∏è | –Ø –Ω–µ –º–æ–≥—É **–æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.**")
    else:
        await message.edit("‚ö†Ô∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ **–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.**")


unmute_permissions = ChatPermissions(
    can_send_messages=True,
    can_send_media_messages=True,
    can_send_stickers=True,
    can_send_animations=True,
    can_send_games=True,
    can_use_inline_bots=True,
    can_add_web_page_previews=True,
    can_send_polls=True,
    can_change_info=False,
    can_invite_users=True,
    can_pin_messages=False,
)


@app.on_message(filters.command("unmute", prefix) & filters.me)
async def unmute(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–º—É—Ç"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is True:
        reply = message.reply_to_message
        if reply:
            user = reply.from_user["id"]
        else:
            user = get_arg(message)
            if not user:
                await message.edit("üëÄ | –ù–µ –≤–∏–∂—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ç—Ä–µ–±—É–µ—Ç—Å—è **—Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è.** ")
                return
        try:
            get_user = await app.get_users(user)
            await app.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=get_user.id,
                permissions=unmute_permissions,
            )
            await message.edit(f"‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} –±–æ–ª—å—à–µ **–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π.**")
        except:
            await message.edit("‚ö†Ô∏è | –Ø –Ω–µ –º–æ–≥—É —Å–Ω—è—Ç—å **–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**")
    else:
        await message.edit("‚ö†Ô∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ **–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.**")


@app.on_message(filters.command("kick", prefix) & filters.me)
async def kick_user(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is True:
        reply = message.reply_to_message
        if reply:
            user = reply.from_user["id"]
        else:
            user = get_arg(message)
            if not user:
                await message.edit("üëÄ | –Ø –Ω–µ –≤–∏–∂—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è **–∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ —á–∞—Ç–∞.**")
                return
        try:
            get_user = await app.get_users(user)
            await app.kick_chat_member(
                chat_id=message.chat.id,
                user_id=get_user.id,
            )
            await message.edit(f"‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} –±—ã–ª **–∏—Å–∫–ª—é—á—ë–Ω –∏–∑ —á–∞—Ç–∞.**")
        except:
            await message.edit("‚ö†Ô∏è | –Ø –Ω–µ –º–æ–≥—É **–∏—Å–∫–ª—é—á–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**")
    else:
        await message.edit("‚ö†Ô∏è | –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ **–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.**")


@app.on_message(filters.command("pin", prefix) & filters.me)
async def pin_message(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if message.chat.type in ["group", "supergroup"]:
        admins = await app.get_chat_members(
            message.chat.id, filter=ChatMemberFilters.ADMINISTRATORS
        )
        admin_ids = [user.user.id for user in admins]

        if me.id in admin_ids:
            if message.reply_to_message:
                disable_notification = True

                if len(message.command) >= 2 and message.command[1] in [
                    "alert",
                    "notify",
                    "loud",
                ]:
                    disable_notification = False

                await app.pin_chat_message(
                    message.chat.id,
                    message.reply_to_message.message_id,
                    disable_notification=disable_notification,
                )
                await message.edit("`‚úÖ | –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!`")
            else:
                await message.edit("`‚ùï | –ù–µ –≤–∏–∂—É —Å–æ–æ–±—â–µ–Ω–∏—è,–∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–∫—Ä–µ–ø–∏—Ç—å!`")
        else:
            await message.edit("`‚õîÔ∏è | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`")
    else:
        await message.edit("`‚ùóÔ∏è | –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.`")
    await asyncio.sleep(3)
    await message.delete()


@app.on_message(filters.command("unpin", prefix) & filters.me)
async def pin(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        try:
            message_id = message.reply_to_message.message_id
            await app.unpin_chat_message(message.chat.id, message_id)
            await message.edit("‚úÖ | –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–æ!")
        except:
            await message.edit("‚ùï | –ù–µ –≤–∏–∂—É —Å–æ–æ–±—â–µ–Ω–∏–µ,–∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–∫—Ä–µ–ø–∏—Ç—å")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –û—Ç–∫—Ä–µ–ø"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("aprefix", prefix) & filters.me)
async def promote(client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n –í—ã–¥–∞–Ω —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ –æ–¥–Ω–æ–º—É –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is False:
        await message.edit("**–Ø –Ω–µ –∞–¥–º–∏–Ω.**")
        return
    title = "Admin"
    reply = message.reply_to_message
    if reply:
        user = reply.from_user["id"]
        title = str(get_arg(message))
    else:
        args = get_args(message)
        if not args:
            await message.edit("**–Ø –¥–æ–ª–∂–µ–Ω –∫–æ–≥–æ —Ç–æ –ø–æ–≤—ã—Å–∏—Ç—å?**")
            return
        user = args[0]
        if len(args) > 1:
            title = " ".join(args[1:])
    get_user = await app.get_users(user)
    try:
        await app.promote_chat_member(message.chat.id, user, can_pin_messages=True)
        if title == "":
            title = "–ê–¥–º–∏–Ω"
        await message.edit(
            f"‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ—Ñ–∏–∫—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å —Ç–µ–∫—Å—Ç–æ–º: **[{title}]**"
        )
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—ã–¥–∞–Ω —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ –æ–¥–Ω–æ–º—É –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")
    if title:
        try:
            await app.set_administrator_title(message.chat.id, user, title)
        except:
            pass


@app.on_message(filters.command("admin", prefix) & filters.me)
async def promote(client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –í—ã–¥–∞–Ω–∞ –∞–¥–º–∏–Ω–∫–∞ –æ–¥–Ω–æ–º—É –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is False:
        await message.edit("**–Ø –Ω–µ –∞–¥–º–∏–Ω.**")
        return
    title = "Admin"
    reply = message.reply_to_message
    if reply:
        user = reply.from_user["id"]
        title = str(get_arg(message))
    else:
        args = get_args(message)
        if not args:
            await message.edit("**–Ø –¥–æ–ª–∂–µ–Ω –∫–æ–≥–æ —Ç–æ –ø–æ–≤—ã—Å–∏—Ç—å?**")
            return
        user = args[0]
        if len(args) > 1:
            title = " ".join(args[1:])
    get_user = await app.get_users(user)
    try:
        await app.promote_chat_member(
            message.chat.id,
            user,
            is_anonymous=False,
            can_change_info=True,
            can_delete_messages=True,
            can_edit_messages=True,
            can_invite_users=True,
            can_promote_members=True,
            can_restrict_members=True,
            can_pin_messages=True,
            can_post_messages=True,
        )
        if title == "":
            title = "–ê–¥–º–∏–Ω"
        await message.edit(
            f"‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} –ø–æ–ª—É—á–∏–ª –ø–æ–ª–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º **[{title}]**"
        )
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –í—ã–¥–∞–Ω–∞ –∞–¥–º–∏–Ω–∫–∞ –æ–¥–Ω–æ–º—É –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")
    if title:
        try:
            await app.set_administrator_title(message.chat.id, user, title)
        except:
            pass


@app.on_message(filters.command("unadmin", prefix) & filters.me)
async def demote(client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –û—Ç–æ–±—Ä–∞–Ω —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ –æ–¥–Ω–æ–º—É –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    if await CheckAdmin(message) is False:
        await message.edit("**–Ø –Ω–µ –∞–¥–º–∏–Ω**")
        return
    reply = message.reply_to_message
    if reply:
        user = reply.from_user["id"]
    else:
        user = get_arg(message)
        if not user:
            await message.edit("**–Ø –º–æ–≥—É —Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞?**")
            return
    get_user = await app.get_users(user)
    try:
        await app.promote_chat_member(
            message.chat.id,
            user,
            is_anonymous=False,
            can_change_info=False,
            can_delete_messages=False,
            can_edit_messages=False,
            can_invite_users=False,
            can_promote_members=False,
            can_restrict_members=False,
            can_pin_messages=False,
            can_post_messages=False,
        )
        await message.edit(f"‚ùé | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} –±–æ–ª—å—à–µ –Ω–µ **–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!**")
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –†–∞–∑–∂–∞–ª–æ–≤–∞–Ω –∞–¥–º–∏–Ω"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


@app.on_message(filters.command("invite", prefix) & filters.me)
async def invite(client: Client, message: Message):
    now = datetime.datetime.now()
    timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
    log = logi + timnow + "\n‚ï∞ –£—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏–≥–ª–∞—à—ë–Ω"
    await app.send_message("ClipUSERBOT_LOGGERbot", log)

    reply = message.reply_to_message
    if reply:
        user = reply.from_user["id"]
    else:
        user = get_arg(message)
        if not user:
            await message.edit("**–Ø –¥–æ–ª–∂–µ–Ω –∫–æ–≥–æ —Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å?**")
            return
    get_user = await app.get_users(user)
    try:
        await app.add_chat_members(message.chat.id, get_user.id)
        await message.edit(
            f"‚úÖ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {get_user.first_name} **–ø—Ä–∏–≥–ª–∞—à—ë–Ω –≤ —ç—Ç–æ—Ç —á–∞—Ç!**"
        )
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ö–æ–º–∞–Ω–¥–∞ –≤–∑–ª–æ–º–∞ –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞
@app.on_message(filters.command("hack", prefix) & filters.me)
async def hack(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ hack"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        perc = 0
        while perc < 100:
            text = "üëÆ –í–∑–ª–æ–º –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ..." + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 3)
            await asyncio.sleep(0.1)
        text = "‚úÖ –ü–µ–Ω—Ç–∞–≥–æ–Ω —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–Ω!"
        await message.edit(str(text))
        await asyncio.sleep(3)
        perc = 0
        while perc < 100:
            text = "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ..." + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 5)
            await asyncio.sleep(0.15)
        await asyncio.sleep(1)
        text = "üêì–ù–∞—à–ª–∏ —Ñ–∞–π—Ç—ã —á—Ç–æ —Ç—ã –ø–µ—Ç—É—Ö!"
        await message.edit(text)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ hack"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ö–æ–º–∞–Ω–¥–∞ –í–∑–ª–æ–º–∞ –∂–æ–ø—ã
@app.on_message(filters.command("jopa", prefix) & filters.me)
async def jopa(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ jopa"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        perc = 0
        while perc < 100:
            text = "üçë –í–∑–ª–æ–º –∂–æ–ø—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ..." + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 3)
            await asyncio.sleep(0.1)
        text = "‚úÖ –ñ–æ–ø–∞ –≤–∑–ª–æ–º–∞–Ω–∞"
        await message.edit(str(text))
        await asyncio.sleep(3)
        text = "üîç –ü–æ–∏—Å–∫ –°–ª–∏–≤–æ–≤ ..."
        await message.edit(str(text))
        perc = 0
        await asyncio.sleep(3)
        while perc < 100:
            text = "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å–ª–∏–≤–æ–≤ ..." + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 4)
            await asyncio.sleep(0.15)
        text = "‚úÖ –°–ª–∏–≤—ã –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã"
        await message.edit(str(text))
        perc = 0
        await asyncio.sleep(5)
        while perc < 100:
            text = "‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞ —Å–ª–∏–≤–æ–≤ –±–∞—Ä—ã–≥–µ..." + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 5)
            await asyncio.sleep(0.15)

        text = "‚úÖ –ü—Ä–æ–¥–∞–Ω–Ω–æ"
        await message.edit(str(text))
        await asyncio.sleep(2)
        rand = random.randint(100, 5000)
        bal = rand
        text = "üí∏ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ " + str(bal) + " ‚ÇΩ"
        await message.edit(text)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")

            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ jopa"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –ù–∞—Ä–∫–æ—Ç–∞
@app.on_message(filters.command("drugs", prefix) & filters.me)
async def drugs(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ drugs"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)
        perc = 0
        result = 0
        while perc < 100:
            text = "üçÅ–ü–æ–∏—Å–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ " + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 3)
            await asyncio.sleep(0.1)
        text = "–ù–∞–π–¥–µ–Ω–æ 3 –∫–≥ —à–ø–µ–∫—Å–∞üç™üí®"
        await message.edit(str(text))
        await asyncio.sleep(3)
        text = "–û—Ñ–æ—Ä–º–ª—è–µ–º –≤–∫–∏–¥ üåø‚öóÔ∏è"
        await message.edit(str(text))
        await asyncio.sleep(5)
        drugsss = ['üî•üò≥ –í–∞—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–∞—á–∞–ª–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã üò≥üî•',
                   'ü•¥–í—ã –ø–æ–∂–∏–ª–æ–π –Ω–∞—Ä–∫–æ–º–∞–Ω, –≤–∞—Å –Ω–µ –±–µ—Ä—ë—Ç –æ–¥–Ω–∞ –¥–æ–∑–∞, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±–æ–ª—å—à–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ  –µ—â—ë —Ä–∞–∑ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤–∫–∏–¥ü•¥',
                   'üòñ–°–µ–≥–æ–¥–Ω—è –Ω–µ –≤–∞—à –¥–µ–Ω—å, –≤—ã —Ö–æ—Ç—å –∏ –ø–æ–∂–∏–ª–æ–π, –Ω–æ –ø—Ä–∏–Ω—è–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ. –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ —Å–º–µ—Ä—Ç–∏ - –ø–µ—Ä–µ–¥–æ–∑üòñ',
                   'üòå–í—ã –æ—Ñ–æ—Ä–º–∏–ª–∏ –≤–∫–∏–¥, –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å)üòå']
        drug = random.choice(drugsss)
        await message.edit(drug)
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ drugs"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


# –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –º–∞–º–∫–∏
@app.on_message(filters.command("mum", prefix) & filters.me)
async def mum(client: Client, message: Message):
    try:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ mum"
        await app.send_message("ClipUSERBOT_LOGGERbot", log)

        text = "üîç –ü–æ–∏—Å–∫ —Ç–≤–æ–µ–π –º–∞–º–∫–∏ –Ω–∞—á–∞–ª—Å—è..."
        await message.edit(str(text))
        await asyncio.sleep(3.0)
        perc = 0
        while perc < 100:
            text = "üîç –ò—â–µ–º —Ç–≤–æ—é –º–∞–º–∞—à—É –Ω–∞ –ê–≤–∏—Ç–æ... " + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 3)
            await asyncio.sleep(0.75)
        text = "‚ùå –ú–∞–º–∞—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–∞"
        await message.edit(str(text))
        await asyncio.sleep(3.0)
        perc = 0
        while perc < 100:
            text = "üîç –ü–æ–∏—Å–∫ —Ç–≤–æ–µ–π –º–∞–º–∞—à–∏ –Ω–∞ —Å–≤–∞–ª–∫–µ... " + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 5)
            await asyncio.sleep(0.75)
        text = "‚ùå –ú–∞–º–∞—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–∞"
        await message.edit(str(text))

        perc = 0
        while perc < 100:
            text = "üîç –ü–æ–∏—Å–∫ —Ç–≤–æ–µ–π –º–∞–º–∫–∏ –≤ –∫–∞–Ω–∞–≤–µ... " + str(perc) + "%"
            await message.edit(str(text))
            perc += random.randint(1, 5)
            await asyncio.sleep(0.75)
        text = "‚úÖ –ú–∞–º–∫–∞ –Ω–∞–π–¥–µ–Ω–∞... –û–Ω–∞ –≤ –∫–∞–Ω–∞–≤–µ"
        await message.edit(str(text))
    except FloodWait as e:
        with open("floodwait.txt", "w+") as f:

            if me.last_name == None:
                f.write("·†ã")
            else:
                f.write(me.last_name)
            f.close()
        with open("floodwait.txt", "r+") as f:
            opisanie = f.read()
            await app.update_profile(last_name=f"{opisanie} | –§–ª—É–¥–≤–µ–π—Ç")
            await asyncio.sleep(e.x)
            await app.update_profile(last_name=f"{opisanie}")
            f.close()
    except Exception as erryr:
        now = datetime.datetime.now()
        timnow = now.strftime("–î–∞—Ç–∞ %d.%m.%Y ‚Ä¢ –í—Ä–µ–º—è %H:%M:%S")
        log = logi + timnow + "\n‚ï∞ –ö–æ–º–∞–Ω–¥–∞ mum"
        await app.send_message("ClipUSERBOT_LOGGERbot", f"{log}\n\n–û–®–ò–ë–ö–ê!\n{erryr}")
        await message.edit(f"‚ö†Ô∏è | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\nüí¨ | –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫—É –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: @ClipUSERBOT_LOGGERbot")


app.run()
